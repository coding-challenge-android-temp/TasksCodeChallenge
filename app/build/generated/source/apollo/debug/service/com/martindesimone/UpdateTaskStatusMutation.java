// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.martindesimone;

import com.apollographql.apollo.api.Mutation;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ScalarTypeAdapters;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer;
import com.apollographql.apollo.api.internal.QueryDocumentMinifier;
import com.apollographql.apollo.api.internal.ResponseFieldMapper;
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller;
import com.apollographql.apollo.api.internal.ResponseReader;
import com.apollographql.apollo.api.internal.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class UpdateTaskStatusMutation implements Mutation<UpdateTaskStatusMutation.Data, UpdateTaskStatusMutation.Data, UpdateTaskStatusMutation.Variables> {
  public static final String OPERATION_ID = "960506b683f5b233f393eb7f4301cff6d8421848744afd2a24dd6bfaf8f07411";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "mutation UpdateTaskStatus($taskId: String!, $taskIsDone: Boolean!) {\n"
        + "  updateTaskStatus(id: $taskId, isDone: $taskIsDone) {\n"
        + "    __typename\n"
        + "    id\n"
        + "    name\n"
        + "    note\n"
        + "    isDone\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "UpdateTaskStatus";
    }
  };

  private final UpdateTaskStatusMutation.Variables variables;

  public UpdateTaskStatusMutation(@NotNull String taskId, boolean taskIsDone) {
    Utils.checkNotNull(taskId, "taskId == null");
    variables = new UpdateTaskStatusMutation.Variables(taskId, taskIsDone);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public UpdateTaskStatusMutation.Data wrapData(UpdateTaskStatusMutation.Data data) {
    return data;
  }

  @Override
  public UpdateTaskStatusMutation.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<UpdateTaskStatusMutation.Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<UpdateTaskStatusMutation.Data> parse(@NotNull final BufferedSource source,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<UpdateTaskStatusMutation.Data> parse(@NotNull final ByteString byteString,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<UpdateTaskStatusMutation.Data> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<UpdateTaskStatusMutation.Data> parse(@NotNull final ByteString byteString) throws
      IOException {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    private @NotNull String taskId;

    private boolean taskIsDone;

    Builder() {
    }

    public Builder taskId(@NotNull String taskId) {
      this.taskId = taskId;
      return this;
    }

    public Builder taskIsDone(boolean taskIsDone) {
      this.taskIsDone = taskIsDone;
      return this;
    }

    public UpdateTaskStatusMutation build() {
      Utils.checkNotNull(taskId, "taskId == null");
      return new UpdateTaskStatusMutation(taskId, taskIsDone);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final @NotNull String taskId;

    private final boolean taskIsDone;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(@NotNull String taskId, boolean taskIsDone) {
      this.taskId = taskId;
      this.taskIsDone = taskIsDone;
      this.valueMap.put("taskId", taskId);
      this.valueMap.put("taskIsDone", taskIsDone);
    }

    public @NotNull String taskId() {
      return taskId;
    }

    public boolean taskIsDone() {
      return taskIsDone;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeString("taskId", taskId);
          writer.writeBoolean("taskIsDone", taskIsDone);
        }
      };
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forObject("updateTaskStatus", "updateTaskStatus", new UnmodifiableMapBuilder<String, Object>(2)
      .put("id", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "taskId")
        .build())
      .put("isDone", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "taskIsDone")
        .build())
      .build(), true, Collections.<ResponseField.Condition>emptyList())
    };

    final @Nullable UpdateTaskStatus updateTaskStatus;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@Nullable UpdateTaskStatus updateTaskStatus) {
      this.updateTaskStatus = updateTaskStatus;
    }

    /**
     * Updates value of the flag "isDone" for task identified by "id".
     * Returns Task after update.
     */
    public @Nullable UpdateTaskStatus updateTaskStatus() {
      return this.updateTaskStatus;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeObject($responseFields[0], updateTaskStatus != null ? updateTaskStatus.marshaller() : null);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "updateTaskStatus=" + updateTaskStatus
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.updateTaskStatus == null) ? (that.updateTaskStatus == null) : this.updateTaskStatus.equals(that.updateTaskStatus));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (updateTaskStatus == null) ? 0 : updateTaskStatus.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final UpdateTaskStatus.Mapper updateTaskStatusFieldMapper = new UpdateTaskStatus.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final UpdateTaskStatus updateTaskStatus = reader.readObject($responseFields[0], new ResponseReader.ObjectReader<UpdateTaskStatus>() {
          @Override
          public UpdateTaskStatus read(ResponseReader reader) {
            return updateTaskStatusFieldMapper.map(reader);
          }
        });
        return new Data(updateTaskStatus);
      }
    }
  }

  /**
   * A structure of a single task.
   */
  public static class UpdateTaskStatus {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("id", "id", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("name", "name", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("note", "note", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forBoolean("isDone", "isDone", null, false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @NotNull String id;

    final @NotNull String name;

    final @Nullable String note;

    final boolean isDone;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public UpdateTaskStatus(@NotNull String __typename, @NotNull String id, @NotNull String name,
        @Nullable String note, boolean isDone) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.id = Utils.checkNotNull(id, "id == null");
      this.name = Utils.checkNotNull(name, "name == null");
      this.note = note;
      this.isDone = isDone;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public @NotNull String id() {
      return this.id;
    }

    public @NotNull String name() {
      return this.name;
    }

    public @Nullable String note() {
      return this.note;
    }

    public boolean isDone() {
      return this.isDone;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], id);
          writer.writeString($responseFields[2], name);
          writer.writeString($responseFields[3], note);
          writer.writeBoolean($responseFields[4], isDone);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "UpdateTaskStatus{"
          + "__typename=" + __typename + ", "
          + "id=" + id + ", "
          + "name=" + name + ", "
          + "note=" + note + ", "
          + "isDone=" + isDone
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof UpdateTaskStatus) {
        UpdateTaskStatus that = (UpdateTaskStatus) o;
        return this.__typename.equals(that.__typename)
         && this.id.equals(that.id)
         && this.name.equals(that.name)
         && ((this.note == null) ? (that.note == null) : this.note.equals(that.note))
         && this.isDone == that.isDone;
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= id.hashCode();
        h *= 1000003;
        h ^= name.hashCode();
        h *= 1000003;
        h ^= (note == null) ? 0 : note.hashCode();
        h *= 1000003;
        h ^= Boolean.valueOf(isDone).hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<UpdateTaskStatus> {
      @Override
      public UpdateTaskStatus map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String id = reader.readString($responseFields[1]);
        final String name = reader.readString($responseFields[2]);
        final String note = reader.readString($responseFields[3]);
        final boolean isDone = reader.readBoolean($responseFields[4]);
        return new UpdateTaskStatus(__typename, id, name, note, isDone);
      }
    }
  }
}
